package com.bn.txz.game;

import java.util.Arrays;

import com.bn.txz.manager.CompareDis;

public class GuanQiaData 
{
	//第一關
	//迷宮地圖
	//資料讀以及更新的鎖
	public Object gqdataLock=new Object();
	public int[][][] MAP=//0水1橋2箱子3目的4人5推好的箱子6人在目的上方
	{
			{//第一關
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,1,1,1,1,1,1,1,1,1,3,0,0,0,0},
				{0,0,0,0,1,1,1,1,1,1,2,1,0,1,0,0,0,0},
				{0,0,0,0,0,0,1,1,0,1,1,1,0,1,0,0,0,0},
				{0,0,0,0,1,1,0,1,4,1,0,1,1,1,0,0,0,0},  
				{0,0,0,0,2,1,0,1,0,1,1,1,0,1,0,0,0,0},
				{0,0,0,0,3,1,1,1,0,1,1,1,1,1,0,0,0,0},
				{0,0,0,0,1,1,1,1,0,1,1,0,0,1,0,0,0,0},
				{0,0,0,0,1,1,0,0,0,1,1,1,0,1,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}
			},
			
			{//第二關
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,1,1,1,1,4,1,1,3,1,1,0,0,0,0},
				{0,0,0,0,1,1,1,1,1,1,1,1,0,1,0,0,0,0},
				{0,0,0,0,0,0,1,2,0,1,1,2,0,1,0,0,0,0},
				{0,0,0,0,1,1,0,1,1,1,0,1,1,1,0,0,0,0},  
				{0,0,0,0,1,1,1,1,0,1,2,1,0,1,0,0,0,0},
				{0,0,0,0,1,1,1,1,1,1,2,1,1,1,0,0,0,0},
				{0,0,0,0,1,1,3,1,0,1,1,1,0,1,0,0,0,0},
				{0,0,0,0,1,1,0,0,0,1,3,1,0,1,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}
				}, 

			
			{//第三關
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,1,1,1,1,4,1,1,1,1,1,0,0,0,0}, 
				{0,0,0,0,1,1,1,1,1,1,1,1,0,1,0,0,0,0},
				{0,0,0,0,0,0,1,2,0,1,1,1,0,1,0,0,0,0},
				{0,0,0,0,1,1,0,1,1,1,0,3,1,1,0,0,0,0},  
				{0,0,0,0,2,1,1,1,0,1,2,1,0,1,0,0,0,0},
				{0,0,0,0,3,1,1,1,1,1,2,1,1,1,0,0,0,0},
				{0,0,0,0,1,1,3,1,0,1,1,1,0,1,0,0,0,0},
				{0,0,0,0,1,1,0,0,0,1,3,1,0,1,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}
			},
			
			{//第四關
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,3,1,1,1,1,1,1,1,1,3,0,0,0,0},
				{0,0,0,0,1,1,2,1,1,1,2,1,0,1,0,0,0,0},
				{0,0,0,0,0,0,1,1,0,1,1,1,0,1,0,0,0,0},
				{0,0,0,0,4,1,0,1,1,1,0,1,1,1,0,0,0,0},  
				{0,0,0,0,1,2,1,1,0,1,1,1,0,2,0,0,0,0},
				{0,0,0,0,3,1,1,1,0,1,2,1,1,3,0,0,0,0},
				{0,0,0,0,1,1,1,1,0,1,1,0,0,1,0,0,0,0},
				{0,0,0,0,1,1,0,0,0,3,1,1,0,1,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}
			},
			
			{//第五關
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,4,1,1,3,1,1,1,1,1,1,0,0,0,0},
				{0,0,0,0,1,1,1,1,1,1,1,1,0,3,0,0,0,0},
				{0,0,0,0,0,0,1,2,0,1,1,1,0,1,0,0,0,0},
				{0,0,0,0,1,1,1,1,1,1,0,1,2,1,0,0,0,0},  
				{0,0,0,0,2,1,0,2,1,1,1,1,0,2,0,0,0,0},
				{0,0,0,0,3,1,1,1,1,2,1,1,1,1,0,0,0,0},
				{0,0,0,0,1,1,3,1,0,1,1,0,0,1,0,0,0,0},
				{0,0,0,0,1,1,0,0,0,1,3,1,0,3,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}
			},
			
			{//第六關
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,3,1,1,1,1,1,3,1,1,1,0,0,0,0},
				{0,0,0,0,1,1,2,1,1,1,1,1,0,1,0,0,0,0},
				{0,0,0,0,0,0,1,1,0,1,1,1,0,2,0,0,0,0},
				{0,0,0,0,1,1,0,1,4,2,1,1,1,1,0,0,0,0},  
				{0,0,0,0,2,1,0,1,2,1,1,1,0,1,0,0,0,0},
				{0,0,0,0,3,1,1,1,1,1,1,1,2,1,0,0,0,0},
				{0,0,0,0,1,1,1,3,1,1,3,0,0,1,0,0,0,0},
				{0,0,0,0,1,1,0,0,0,1,1,1,0,3,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}
			},
			
			{//第七關
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,3,1,1,3,1,1,1,1,1,3,0,0,0,0},
				{0,0,0,0,1,1,1,1,1,1,1,1,0,1,0,0,0,0},
				{0,0,0,0,1,0,1,2,0,2,1,2,0,1,0,0,0,0},
				{0,0,0,0,4,1,0,1,1,1,0,1,1,1,0,0,0,0},  
				{0,0,0,0,2,1,0,1,1,1,1,1,0,1,0,0,0,0},
				{0,0,0,0,3,1,1,1,2,1,1,2,1,1,0,0,0,0},
				{0,0,0,0,1,1,1,1,0,1,1,0,0,1,0,0,0,0},
				{0,0,0,0,1,1,0,0,0,3,1,1,0,3,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}
			},
			
			{//第八關
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,3,1,1,1,1,1,1,3,1,1,0,0,0,0},
				{0,0,0,0,1,1,2,1,3,1,1,1,0,1,0,0,0,0},
				{0,0,0,0,0,0,1,1,0,1,2,1,0,1,0,0,0,0},
				{0,0,0,0,1,1,0,1,1,1,0,1,1,1,0,0,0,0},  
				{0,0,0,0,2,1,0,1,0,1,1,2,1,1,0,0,0,0},
				{0,0,0,0,3,1,1,1,0,1,2,1,1,2,0,0,0,0},
				{0,0,0,0,1,2,1,1,0,1,1,0,0,1,0,0,0,0},
				{0,0,0,0,1,1,3,0,0,4,1,3,0,3,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}
			},
			
			{//第九關
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,1,1,1,1,4,1,1,1,1,1,0,0,0,0},
				{0,0,0,0,1,0,1,0,1,0,1,0,0,1,0,0,0,0},
				{0,0,0,0,1,2,1,1,1,2,1,0,1,1,0,0,0,0},
				{0,0,0,0,1,0,1,0,1,0,3,1,0,1,0,0,0,0},
				{0,0,0,0,3,0,1,0,1,1,0,0,1,1,0,0,0,0},
				{0,0,0,0,1,2,1,1,2,1,2,1,2,3,0,0,0,0},
				{0,0,0,0,1,0,1,0,0,3,0,1,1,0,0,0,0,0},
				{0,0,0,0,3,1,2,1,1,3,0,1,1,3,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}
			}	

	};
	
	static int move_row=0;
	static int move_col=0;
	
	//小方塊的X\Z偏移量
	static float[][] XOffset=new float[16][18];
	static float[][] ZOffset=new float[16][18];
	static 
	{
		float UNIT_SIZE=1f;
		for(int i=4;i<12;i++)
		{
			for(int j=4;j<14;j++)
			{
				XOffset[i][j]=(j-8) * UNIT_SIZE;
				ZOffset[i][j]=(i-9) * UNIT_SIZE+1.5f*UNIT_SIZE;
			}
		}
	}
	//箱子在x\z的偏移量
	static float xoffset=0;
	static float zoffset=0;
	static boolean move_flag=false;//箱子是否搬移的標志
    
	
	int []count=new int[9];//每關箱子的個數的陣列
	{//count起始化
		for(int i=0;i<MAP.length;i++)
		{
			int len=0;
			for(int j=0;j<MAP[i].length;j++)
			{
				for(int k=0;k<MAP[i][j].length;k++)
				{
					if(MAP[i][j][k]==2)
					{
						len++;
					}
				}
			}
			count[i]=len;
		}
	}
	int boxCount=count[GameData.level-1];//目前關箱子的個數
	CompareDis cdArray[]=new CompareDis[boxCount];
	float cx=0;//攝影機的位置
	float cy=0;
	float cz=0;
	public void ComparableByDis(float cx,float cy,float cz,int MAP[][])//排序
	{//傳入的參數為更新後的攝影機的位置和目前關的地圖
		this.cx=cx;
		this.cy=cy;
		this.cz=cz;
		int len=0;
		for(int i=0;i<MAP.length;i++)//循環建立每個箱子對應的可排序物件CompareDis（內含攝影機與箱子的距離，和箱子的位置）
		{
			for(int j=0;j<MAP[0].length;j++)
			{
				if(MAP[i][j]==2)
				{
					float bx=GuanQiaData.XOffset[i][j];//箱子的位置
					float by=GameStaticData.FLOOR_Y+1f;
					float bz=GuanQiaData.ZOffset[i][j];
					float disTemp=(float)Math.sqrt((cx-bx)*(cx-bx)+(cy-by)*(cy-by)+(cz-bz)*(cz-bz));
					cdArray[len++]=new CompareDis(disTemp,i,j);
				}
			}
		}
		
		for(int i=len;i<cdArray.length;i++)
		{
			cdArray[i].dis=0;
			cdArray[i].col=0;
			cdArray[i].row=0;
		}
		
		Arrays.sort(cdArray);//排序
	}
	{
		ComparableByDis(0.91569847f,7.572173f,9.264109f,MAP[GameData.level-1]);
	}
}
